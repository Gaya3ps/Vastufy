"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const userController_1 = __importDefault(require("../controllers/userController"));
const userAuthMiddleware_1 = require("../frameworks/webserver/middleware/userAuthMiddleware");
const userRouter = (0, express_1.Router)();
userRouter.post('/signup', userController_1.default.userRegistration);
userRouter.post('/otp-verification', userController_1.default.verifyOTP);
userRouter.post('/resend-otp', userController_1.default.resendOTP);
userRouter.get('/getStatus', userAuthMiddleware_1.protectUser, userController_1.default.getStatus);
userRouter.post('/login', userController_1.default.userLogin);
userRouter.post('/googleAuth', userController_1.default.googleAuth);
userRouter.post('/forgot-password', userController_1.default.forgotPassword);
userRouter.post('/reset-password', userController_1.default.resetPassword);
userRouter.put('/updateuser/:userId', userAuthMiddleware_1.protectUser, userController_1.default.updateUser);
userRouter.get('/properties', userController_1.default.getProperties);
userRouter.get('/propertydetails/:propertyId', userAuthMiddleware_1.protectUser, userController_1.default.getPropertyDetailsById);
userRouter.post('/bookings', userAuthMiddleware_1.protectUser, userController_1.default.addBookings);
userRouter.get('/properties', userController_1.default.getVerifiedProperties);
userRouter.get('/bookingdetails', userController_1.default.getBookingDetails);
userRouter.post('/chat/initiate', userAuthMiddleware_1.protectUser, userController_1.default.initiateChat);
userRouter.get('/chat/:chatId', userController_1.default.getChats);
userRouter.post('/chat/:chatId/send', userAuthMiddleware_1.protectUser, userController_1.default.sendMessage);
userRouter.get('/chatList/:userId', userAuthMiddleware_1.protectUser, userController_1.default.getChatList);
userRouter.post('/refreshtoken', userController_1.default.refreshToken);
userRouter.get('/allbookings', userController_1.default.getAllBookings);
userRouter.get('/userCount', userController_1.default.getUserCount);
userRouter.get('/propertyStats', userController_1.default.getPropertyStats);
exports.default = userRouter;
